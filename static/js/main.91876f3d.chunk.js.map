{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","services/image-api.js","components/Modal/Modal.jsx","App.js","index.js"],"names":["Seachbar","onSubmit","useState","findValue","setFindValue","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Button","onLoadMore","onClick","ImageGalleryItem","id","tags","webformatURL","largeImageURL","src","alt","ImageGallery","status","images","handleImageClick","imageURL","imageALT","color","height","width","style","textAlign","message","length","map","api","fetchImages","pageNumber","fetch","then","responce","ok","json","Promise","reject","Error","res","hits","Modal","onCloseModal","useEffect","window","addEventListener","handleCloseModal","removeEventListener","e","code","target","App","setPageNumber","setImages","setStatus","setError","showModal","setShowModal","setLargeImageURL","imageAlt","setImageAlt","isFirstRender","useRef","current","getImages","imagesAPI","prevImages","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","modalToggle","url","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91876f3d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport './Searchbar.css';\n\nexport default function Seachbar({ onSubmit }) {\n  const [findValue, setFindValue] = useState('');\n\n  const handleInputChange = event => {\n    setFindValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (findValue.trim() === '') {\n      toast.error('Type something to find');\n      return;\n    }\n\n    onSubmit(findValue);\n    setFindValue('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={findValue}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSeachbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" onClick={onLoadMore} className=\"Button\">\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nexport default function ImageGalleryItem({\n  id,\n  tags,\n  webformatURL,\n  largeImageURL,\n  onClick,\n}) {\n  const handleImageClick = () => {\n    onClick(largeImageURL, tags);\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={handleImageClick}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  tags: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Loader from '../Loader/Loader';\nimport Button from '../Button/Button';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nimport './ImageGallery.css';\n\nexport default function ImageGallery({\n  status,\n  error,\n  images,\n  onClick,\n  onLoadMore,\n}) {\n  const handleImageClick = (imageURL, imageALT) => {\n    onClick(imageURL, imageALT);\n  };\n\n  if (status === 'idle') {\n    return <div className=\"helper-text\">Enter search query</div>;\n  }\n  if (status === 'pending') {\n    return Loader();\n  }\n  if (status === 'rejected') {\n    return <h1>{error.message}</h1>;\n  }\n  if (status === 'resolved' && images.length !== 0) {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem\n              key={id}\n              id={id}\n              tags={tags}\n              webformatURL={webformatURL}\n              largeImageURL={largeImageURL}\n              onClick={handleImageClick}\n            />\n          ))}\n        </ul>\n        {<Button onLoadMore={onLoadMore} />}\n      </>\n    );\n  } else {\n    return <div className=\"helper-text\">We can't find it</div>;\n  }\n}\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onLoadMore: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  images: PropTypes.array,\n};\n","import React from 'react';\n\nimport Spinner from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Loader() {\n  return (\n    <Spinner\n      type=\"Rings\"\n      color=\"darkblue\"\n      height={150}\n      width={150}\n      style={{ textAlign: 'center' }}\n    />\n  );\n}\n","function fetchImages(findValue, pageNumber) {\n  const API_KEY = '19076620-7a0fb8f11fcad59e80e6da8cf';\n  return fetch(\n    `https://pixabay.com/api/?q=${findValue}&page=${pageNumber}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  )\n    .then(responce => {\n      if (responce.ok) {\n        return responce.json();\n      }\n      return Promise.reject(new Error(`Oh no... We cant find ${findValue}`));\n    })\n    .then(res => {\n      return res.hits;\n    });\n}\n\nconst api = { fetchImages };\n\nexport default api;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nexport default function Modal({ src, alt, onCloseModal }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleCloseModal);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  });\n\n  const handleCloseModal = e => {\n    if (e.code === 'Escape' || e.target === e.currentTarget) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleCloseModal}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  onCloseModal: PropTypes.func,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport imagesAPI from './services/image-api';\nimport Modal from './components/Modal/Modal';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nexport default function App() {\n  const [findValue, setFindValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [imageAlt, setImageAlt] = useState('');\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    setStatus('pending');\n    getImages();\n    // eslint-disable-next-line\n  }, [findValue]);\n\n  useEffect(() => {\n    if (pageNumber !== 1) {\n      getImages();\n    }\n    // eslint-disable-next-line\n  }, [pageNumber]);\n\n  const handleFormSubmit = findValue => {\n    setFindValue(findValue);\n    setPageNumber(1);\n    setImages([]);\n  };\n\n  const getImages = () => {\n    imagesAPI\n      .fetchImages(findValue, pageNumber)\n      .then(res => {\n        if (pageNumber === 1) {\n          setImages(res);\n        } else {\n          setImages(prevImages => [...prevImages, ...res]);\n        }\n        setStatus('resolved');\n        if (pageNumber !== 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  };\n\n  const onLoadMore = () => {\n    setPageNumber(pageNumber => pageNumber + 1);\n  };\n\n  const onOpenModal = (url, alt) => {\n    setLargeImageURL(url);\n    setImageAlt(alt);\n\n    modalToggle();\n  };\n\n  const modalToggle = () => {\n    setShowModal(showModal => !showModal);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        status={status}\n        error={error}\n        images={images}\n        onClick={onOpenModal}\n        onLoadMore={onLoadMore}\n      />\n      {showModal && (\n        <Modal src={largeImageURL} alt={imageAlt} onCloseModal={modalToggle} />\n      )}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}